{"version":3,"sources":["webpack:///./src/ui/src/components/Header/OfficeHeader.scss?a158","webpack:///./src/ui/src/components/Header/OfficeHeader.scss","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/OfficeEditorImageFilePickerHandler.js","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/index.js","webpack:///./src/ui/src/components/Header/OfficeEditorToolsHeader.js","webpack:///./src/ui/src/helpers/openOfficeEditorFilePicker.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","e","t","r","Symbol","n","iterator","o","toStringTag","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","FilePickerHandler","dispatch","useDispatch","activeFlyout","useSelector","selectors","getActiveFlyout","openDocument","_ref","_callee","_context","addImageToOfficeEditorDocument","actions","arguments","apply","_next","_throw","_x","React","createElement","className","id","type","accept","OFFICE_EDITOR_ACCEPTED_IMAGE_FORMATS","onChange","_asyncToGenerator","_defineProperty","_typeof","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","officeEditorToggleableStyles","Core","Document","OfficeEditor","ToggleableStyles","TextStyles","activeStates","values","map","style","ActionButton","key","isActive","ariaPressed","onClick","core","getOfficeEditor","updateSelectionAndCursorStyle","dataElement","concat","title","img","JustificationOptions","_ref2","justification","Fragment","JUSTIFICATION_OPTIONS","Left","updateParagraphStyle","Center","Right","Both","ListOptions","_ref3","listType","bulletListObjects","OFFICE_BULLET_OPTIONS","src","numberListOptions","OFFICE_NUMBER_OPTIONS","LIST_OPTIONS","Unordered","toggleListSelection","Dropdown","images","columns","onClickItem","val","setListPreset","Ordered","decreaseIndent","_callee2","_context2","increaseIndent","propTypes","PropTypes","string","OfficeEditorToolsHeader","_wvFontColor$toHexStr","_useSelector2","_slicedToArray","state","isElementOpen","DataElement","OFFICE_EDITOR_TOOLS_HEADER","getOfficeEditorCursorProperties","isCursorInTable","getOfficeEditorSelectionProperties","getAvailableFontFaces","getActiveTheme","getCSSFontValues","isNonPrintingCharactersEnabled","shallowEqual","isOpen","cursorProperties","selectionProperties","availableFontFaces","activeTheme","cssFontValues","enableNonPrintingCharacters","_useState2","useState","containerWidth","setContainerWidth","_useState4","initialHeaderWidth","setInitialHeaderWidth","_useState6","visibleGroupCount","setVisibleGroupCount","_useState8","showMoreTools","setShowMoreTools","useEffect","_core$getDocument","onCursorPropertiesUpdated","_ref6","_callee3","_context3","setOfficeEditorCursorProperties","onSelectionPropertiesUpdated","setOfficeEditorSelectionProperties","getDocument","addEventListener","removeEventListener","fontFace","includes","addOfficeEditorAvailableFontFace","actualContainerWidth","properties","isTextSelected","isBold","bold","isItalic","italic","isUnderline","underlineStyle","pointSize","pointSizeSelectionKey","undefined","toString","paragraphProperties","lineHeight","calculateLineSpacing","lineHeightMultiplier","fontPointSize","DEFAULT_POINT_SIZE","isLightMode","Theme","LIGHT","wvFontColor","convertCoreColorToWebViewerColor","color","useColorIconBorder","ariaLabel","toHexString","DataElementWrapper","Measure","bounds","onResize","_ref7","width","_ref8","measureRef","ref","_ref9","_ref0","items","keys","AVAILABLE_STYLE_PRESET_MAP","onOpened","_ref1","_callee4","item","stylePreset","fontColor","parsedFontColor","newTextStyle","_context4","parseInt","fontSize","Annotations","Color","R","g","b","B","underline","updateParagraphStylePresets","setMainCursorStyle","_x2","getCustomItemStyle","_objectSpread","padding","applyCustomStyleToButton","currentSelectionKey","convertCursorToStylePreset","maxHeight","customDataValidator","font","hasInput","AVAILABLE_POINT_SIZES","isNaN","FONT_SIZE","MAX","MIN","isSearchEnabled","ToggleElementButton","OFFICE_EDITOR_TEXT_COLOR_BUTTON","element","OFFICE_EDITOR_COLOR_PICKER_OVERLAY","iconClassName","ColorPickerOverlay","onStyleChange","_","newColor","closeElements","LINE_SPACING_OPTIONS","lineSpacingOption","lineSpacing","displayButton","OFFICE_EDITOR_PAGE_BREAK","disabled","insertPageBreak","OFFICE_EDITOR_TOOLS_HEADER_INSERT_TABLE","Icon","glyph","OfficeEditorCreateTablePopup","OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE","_getRootNode$querySel","getRootNode","querySelector","click","OfficeEditorImageFilePickerHandler"],"mappings":"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","file":"chunks/chunk.65.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OfficeHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.MainHeader.OfficeEditorTools{padding:0 8px;align-items:center;flex-direction:row}.MainHeader.OfficeEditorTools .HeaderItems{width:auto}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown{margin-inline-start:8px}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown .picked-option{text-align:start}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper{display:flex;align-items:center;position:relative}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper .more-tools{position:absolute;inset-block-start:46px;inset-inline-end:6px;width:auto;padding:0}.MainHeader.OfficeEditorTools .Button .Icon svg{vertical-align:middle}.MainHeader.OfficeEditorTools .icon-text-color{display:flex;align-items:center;justify-content:center}.MainHeader.OfficeEditorTools .list-style-button{margin-inline-end:0!important}.MainHeader.OfficeEditorTools .list-style-dropdown{background:transparent;border:none;width:12px!important;height:32px!important;margin-inline-start:0!important;z-index:0}.MainHeader.OfficeEditorTools .list-style-dropdown.Dropdown__wrapper:hover{border-radius:4px;background:var(--tools-button-hover)}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown{padding:0}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown svg rect{stroke:none}.MainHeader.OfficeEditorTools .list-style-dropdown .picked-option-text{display:none}.MainHeader.OfficeEditorTools .list-style-dropdown .arrow{padding-inline-start:0}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items{overflow:hidden;width:auto!important}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items .Dropdown__item{height:74px!important;padding:15px 0;margin:3px;cursor:pointer}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items .Dropdown__item .officeEditor-list-style-icon{width:60px!important;height:74px!important}.MainHeader.OfficeEditorTools .insert-table-dropdown{margin:0 6px}.MainHeader.OfficeEditorTools .insert-table-dropdown.open{background-color:var(--tools-button-hover);border-radius:4px}.MainHeader.OfficeEditorTools .insert-table-dropdown .display-button{display:flex;align-items:center;cursor:pointer}.MainHeader.OfficeEditorTools .insert-table-dropdown .display-button:hover{background-color:var(--tools-button-hover);border-radius:4px}.MainHeader.OfficeEditorTools .insert-table-dropdown .display-button .Button{background-color:transparent!important}.MainHeader.OfficeEditorTools .insert-table-dropdown .display-button .Icon.arrow{width:12px;height:12px;margin:0 2px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport actions from 'actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport addImageToOfficeEditorDocument from 'src/helpers/addImageToOfficeEditorDocument';\nimport { OFFICE_EDITOR_ACCEPTED_IMAGE_FORMATS } from 'src/constants/officeEditor';\n\nimport '../FilePickerHandler/FilePickerHandler.scss';\n\nconst FilePickerHandler = () => {\n  const dispatch = useDispatch();\n  const activeFlyout = useSelector(selectors.getActiveFlyout);\n\n  const openDocument = async (e) => {\n    await addImageToOfficeEditorDocument(dispatch, actions, e, activeFlyout);\n  };\n\n  return (\n    <div className=\"FilePickerHandler\">\n      <input\n        id=\"office-editor-file-picker\"\n        type=\"file\"\n        accept={OFFICE_EDITOR_ACCEPTED_IMAGE_FORMATS}\n        onChange={openDocument}\n      />\n    </div>\n  );\n};\n\nexport default FilePickerHandler;\n","import FilePickerHandler from './OfficeEditorImageFilePickerHandler';\n\nexport default FilePickerHandler;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport Measure from 'react-measure';\nimport PropTypes from 'prop-types';\nimport core from 'core';\nimport Dropdown from 'components/Dropdown';\nimport ActionButton from 'components/ActionButton';\nimport ToggleElementButton from 'components/ToggleElementButton';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport OfficeEditorImageFilePickerHandler from 'components/OfficeEditorImageFilePickerHandler';\nimport ColorPickerOverlay from 'components/ColorPickerOverlay';\nimport Icon from 'components/Icon';\nimport OfficeEditorCreateTablePopup from 'components/OfficeEditorCreateTablePopup';\nimport DataElement from 'constants/dataElement';\nimport Theme from 'constants/theme';\nimport {\n  LINE_SPACING_OPTIONS,\n  JUSTIFICATION_OPTIONS,\n  LIST_OPTIONS,\n  DEFAULT_POINT_SIZE,\n  OFFICE_BULLET_OPTIONS,\n  OFFICE_NUMBER_OPTIONS,\n  FONT_SIZE,\n  AVAILABLE_STYLE_PRESET_MAP,\n  AVAILABLE_POINT_SIZES,\n} from 'constants/officeEditor';\nimport openOfficeEditorFilePicker from 'helpers/openOfficeEditorFilePicker';\nimport { calculateLineSpacing, convertCursorToStylePreset, convertCoreColorToWebViewerColor } from 'helpers/officeEditor';\n\nimport './Header.scss';\nimport './OfficeHeader.scss';\nimport '../HeaderItems/HeaderItems.scss';\n\nconst listOptionsWidth = 121;\nconst justificationOptionsWidth = 209;\nconst moreButtonWidth = 77;\nconst officeEditorToggleableStyles = window.Core.Document.OfficeEditor.ToggleableStyles;\n\nconst TextStyles = ({ activeStates }) => {\n  return Object.values(officeEditorToggleableStyles).map((style) => (\n    <ActionButton\n      key={style}\n      isActive={activeStates[style]}\n      ariaPressed={activeStates[style]}\n      onClick={() => {\n        core.getOfficeEditor().updateSelectionAndCursorStyle({ [style]: true });\n      }}\n      dataElement={`office-editor-${style}`}\n      title={`officeEditor.${style}`}\n      img={`icon-text-${style}`}\n    />\n  ));\n};\n\nconst JustificationOptions = ({ justification }) => {\n  return (\n    <>\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Left}\n        dataElement='office-editor-left-align'\n        title='officeEditor.leftAlign'\n        img='icon-menu-left-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'left'\n          });\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Center}\n        dataElement='office-editor-center-align'\n        title='officeEditor.centerAlign'\n        img='icon-menu-center-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'center'\n          });\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Right}\n        dataElement='office-editor-right-align'\n        title='officeEditor.rightAlign'\n        img='icon-menu-right-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'right'\n          });\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Both}\n        dataElement='office-editor-justify'\n        title='officeEditor.justify'\n        img='icon-menu-both-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'both'\n          });\n        }}\n      />\n    </>\n  );\n};\n\nconst ListOptions = ({ listType }) => {\n  const bulletListObjects = OFFICE_BULLET_OPTIONS.map((options) => ({\n    className: 'officeEditor-list-style-icon',\n    key: options.enum,\n    src: options.img\n  }));\n\n  const numberListOptions = OFFICE_NUMBER_OPTIONS.map((options) => ({\n    className: 'officeEditor-list-style-icon',\n    key: options.enum,\n    src: options.img\n  }));\n\n  return (\n    <>\n      <ActionButton\n        isActive={listType === LIST_OPTIONS.Unordered}\n        dataElement='unorderedListDropButton'\n        title='officeEditor.bulletList'\n        img='icon-office-editor-bullet-list'\n        className='list-style-button'\n        onClick={() => {\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Unordered);\n        }}\n      />\n      <Dropdown\n        id='office-editor-bullet-list-dropdown'\n        dataElement='office-editor-bullet-list-dropdown'\n        images={bulletListObjects}\n        columns={3}\n        onClickItem={(val) => {\n          core.getOfficeEditor().setListPreset(val);\n        }}\n        className='list-style-dropdown'\n      />\n      <ActionButton\n        isActive={listType === LIST_OPTIONS.Ordered}\n        dataElement='office-editor-number-list'\n        title='officeEditor.numberList'\n        img='icon-office-editor-number-list'\n        className='list-style-button'\n        onClick={() => {\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Ordered);\n        }}\n      />\n      <Dropdown\n        id='office-editor-number-list-dropdown'\n        dataElement='office-editor-number-list-dropdown'\n        images={numberListOptions}\n        columns={3}\n        onClickItem={(val) => {\n          core.getOfficeEditor().setListPreset(val);\n        }}\n        className='list-style-dropdown'\n      />\n      <ActionButton\n        dataElement='decreaseIndentButton'\n        title='officeEditor.decreaseIndent'\n        img='ic-indent-decrease'\n        onClick={async () => {\n          await core.getOfficeEditor().decreaseIndent();\n        }}\n      />\n      <ActionButton\n        dataElement='increaseIndentButton'\n        title='officeEditor.increaseIndent'\n        img='ic-indent-increase'\n        onClick={async () => {\n          await core.getOfficeEditor().increaseIndent();\n        }}\n      />\n    </>\n  );\n};\n\nListOptions.propTypes = {\n  listType: PropTypes.string,\n};\n\nconst OfficeEditorToolsHeader = () => {\n  const dispatch = useDispatch();\n  const [\n    isOpen,\n    cursorProperties,\n    isCursorInTable,\n    selectionProperties,\n    availableFontFaces,\n    activeTheme,\n    cssFontValues,\n    enableNonPrintingCharacters\n  ] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, DataElement.OFFICE_EDITOR_TOOLS_HEADER),\n      selectors.getOfficeEditorCursorProperties(state),\n      selectors.isCursorInTable(state),\n      selectors.getOfficeEditorSelectionProperties(state),\n      selectors.getAvailableFontFaces(state),\n      selectors.getActiveTheme(state),\n      selectors.getCSSFontValues(state),\n      selectors.isNonPrintingCharactersEnabled(state),\n    ],\n    shallowEqual\n  );\n\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [initialHeaderWidth, setInitialHeaderWidth] = useState(0);\n  const [visibleGroupCount, setVisibleGroupCount] = useState(6);\n  const [showMoreTools, setShowMoreTools] = useState(false);\n\n  useEffect(() => {\n    const onCursorPropertiesUpdated = async (cursorProperties) => {\n      dispatch(actions.setOfficeEditorCursorProperties(cursorProperties));\n    };\n    const onSelectionPropertiesUpdated = (selectionProperties) => {\n      dispatch(actions.setOfficeEditorSelectionProperties(selectionProperties));\n    };\n\n    core.getDocument().addEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\n    core.getDocument()?.addEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\n\n    return () => {\n      core.getDocument().removeEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\n      core.getDocument().removeEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cursorProperties.fontFace && !availableFontFaces.includes(cursorProperties.fontFace)) {\n      dispatch(actions.addOfficeEditorAvailableFontFace(cursorProperties.fontFace));\n    }\n  }, [availableFontFaces, cursorProperties]);\n\n  useEffect(() => {\n    if (containerWidth === 0 || initialHeaderWidth === 0) {\n      return;\n    }\n\n    const actualContainerWidth = containerWidth - 16;\n    if (\n      actualContainerWidth >= initialHeaderWidth\n    ) {\n      setVisibleGroupCount(6);\n    } else if (\n      actualContainerWidth < initialHeaderWidth &&\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth + moreButtonWidth)\n    ) {\n      setVisibleGroupCount(5);\n    } else if (\n      actualContainerWidth < (initialHeaderWidth - listOptionsWidth + moreButtonWidth) &&\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth - justificationOptionsWidth + moreButtonWidth) &&\n      actualContainerWidth >= 858 // HeaderItems's width when on small devices (screen width < 900px)\n    ) {\n      setVisibleGroupCount(4);\n    } else {\n      setVisibleGroupCount(3);\n    }\n  }, [containerWidth, initialHeaderWidth]);\n\n  const isTextSelected = core.getOfficeEditor().isTextSelected();\n  const properties = isTextSelected ? selectionProperties : cursorProperties;\n  const isBold = properties.bold;\n  const isItalic = properties.italic;\n  const isUnderline = properties.underlineStyle === 'single';\n  const fontFace = properties.fontFace || '';\n  const pointSize = properties.pointSize;\n  const pointSizeSelectionKey = pointSize === undefined ? '' : pointSize.toString();\n  const justification = properties.paragraphProperties.justification;\n  const lineHeight = calculateLineSpacing(\n    properties.paragraphProperties.lineHeightMultiplier,\n    properties.paragraphProperties.lineHeight,\n    cursorProperties.paragraphProperties.fontPointSize || DEFAULT_POINT_SIZE,\n  );\n  const listType = properties.paragraphProperties.listType;\n\n  const isLightMode = activeTheme === Theme.LIGHT;\n  const wvFontColor = convertCoreColorToWebViewerColor(properties.color);\n  const useColorIconBorder = isLightMode ? wvFontColor.toString() === 'rgba(255,255,255,1)' : wvFontColor.toString() === 'rgba(0,0,0,1)';\n  const ariaLabel = wvFontColor?.toHexString?.();\n\n  return isOpen ? (\n    <DataElementWrapper\n      dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER}\n      className='HeaderToolsContainer'\n    >\n      <Measure\n        bounds\n        onResize={({ bounds }) => {\n          setContainerWidth(bounds.width);\n        }}\n      >\n        {({ measureRef }) => (\n          <div\n            className='MainHeader Tools OfficeEditorTools'\n            ref={measureRef}\n          >\n            <Measure\n              bounds\n              onResize={({ bounds }) => {\n                (initialHeaderWidth === 0) && setInitialHeaderWidth(bounds.width);\n              }}\n            >\n              {({ measureRef }) => (\n                <div\n                  className=\"HeaderItems\"\n                  ref={measureRef}\n                >\n                  <Dropdown\n                    id='office-editor-text-format'\n                    items={Object.keys(AVAILABLE_STYLE_PRESET_MAP)}\n                    // TODO: This shouldn't be closing more tools popup\n                    // It shouldn't know about the existence of it.\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={async (item) => {\n                      const stylePreset = AVAILABLE_STYLE_PRESET_MAP[item];\n                      const fontPointSize = parseInt(stylePreset.fontSize, 10);\n                      const fontColor = new window.Core.Annotations.Color(stylePreset.color);\n                      const parsedFontColor = {\n                        r: fontColor.R,\n                        g: fontColor.G,\n                        b: fontColor.B,\n                        a: 255,\n                      };\n\n                      const newTextStyle = {\n                        bold: false,\n                        italic: false,\n                        underline: false,\n                        pointSize: fontPointSize,\n                        color: parsedFontColor\n                      };\n\n                      await core.getOfficeEditor().updateParagraphStylePresets(newTextStyle);\n                      await core.getOfficeEditor().setMainCursorStyle(newTextStyle);\n                    }}\n                    getCustomItemStyle={(item) => ({ ...AVAILABLE_STYLE_PRESET_MAP[item], padding: '20px 10px', color: 'var(--gray-8)' })}\n                    applyCustomStyleToButton={false}\n                    currentSelectionKey={convertCursorToStylePreset(properties)}\n                    width={160}\n                    dataElement=\"office-editor-text-format\"\n                  />\n                  <Dropdown\n                    id='office-editor-font'\n                    items={availableFontFaces}\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={(fontFace) => {\n                      if (typeof fontFace === 'string') {\n                        core.getOfficeEditor().updateSelectionAndCursorStyle({ fontFace });\n                      }\n                    }}\n                    getCustomItemStyle={(item) => ({ ...cssFontValues[item] })}\n                    maxHeight={500}\n                    customDataValidator={(font) => availableFontFaces.includes(font)}\n                    width={160}\n                    dataElement=\"office-editor-font\"\n                    currentSelectionKey={fontFace}\n                    hasInput\n                  />\n                  <Dropdown\n                    id='office-editor-font-size'\n                    items={AVAILABLE_POINT_SIZES}\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={(pointSize) => {\n                      let fontPointSize = parseInt(pointSize, 10);\n\n                      if (isNaN(fontPointSize)) {\n                        fontPointSize = DEFAULT_POINT_SIZE;\n                      }\n\n                      if (fontPointSize > FONT_SIZE.MAX) {\n                        fontPointSize = FONT_SIZE.MAX;\n                      } else if (fontPointSize < FONT_SIZE.MIN) {\n                        fontPointSize = FONT_SIZE.MIN;\n                      }\n                      core.getOfficeEditor().updateSelectionAndCursorStyle({ pointSize: fontPointSize });\n                    }}\n                    currentSelectionKey={pointSizeSelectionKey}\n                    width={80}\n                    dataElement=\"office-editor-font-size\"\n                    hasInput\n                    isSearchEnabled={false}\n                  />\n                  {(visibleGroupCount >= 4) && (\n                    <>\n                      <div className=\"divider\" />\n                      <TextStyles\n                        activeStates={{\n                          bold: isBold,\n                          italic: isItalic,\n                          underline: isUnderline\n                        }}\n                      />\n                    </>\n                  )}\n                  <div className=\"divider\" />\n                  <ToggleElementButton\n                    onClick={() => setShowMoreTools(false)}\n                    dataElement={DataElement.OFFICE_EDITOR_TEXT_COLOR_BUTTON}\n                    title='officeEditor.textColor'\n                    ariaLabel={ariaLabel}\n                    img='icon-office-editor-circle'\n                    element={DataElement.OFFICE_EDITOR_COLOR_PICKER_OVERLAY}\n                    color={wvFontColor.toString()}\n                    iconClassName={`${useColorIconBorder ? 'icon-border' : ''} icon-text-color`}\n                  />\n                  <ColorPickerOverlay\n                    onStyleChange={(_, newColor) => {\n                      const color = {\n                        r: newColor.R,\n                        g: newColor.G,\n                        b: newColor.B,\n                        a: 255,\n                      };\n                      core.getOfficeEditor().updateSelectionAndCursorStyle({ color });\n                      dispatch(actions.closeElements([DataElement.OFFICE_EDITOR_COLOR_PICKER_OVERLAY]));\n                    }}\n                    color={wvFontColor}\n                  />\n                  {(visibleGroupCount >= 5) && (\n                    <>\n                      <div className=\"divider\" />\n                      <JustificationOptions justification={justification} />\n                    </>\n                  )}\n                  <div className=\"divider\" />\n                  <Dropdown\n                    id='office-editor-line-spacing'\n                    items={Object.keys(LINE_SPACING_OPTIONS)}\n                    onClickItem={(lineSpacingOption) => {\n                      const lineSpacing = LINE_SPACING_OPTIONS[lineSpacingOption];\n                      core.getOfficeEditor().updateParagraphStyle({\n                        'lineHeightMultiplier': lineSpacing\n                      });\n                    }}\n                    currentSelectionKey={lineHeight}\n                    width={80}\n                    dataElement=\"office-editor-line-spacing\"\n                    displayButton={(isOpen) => (\n                      <ActionButton\n                        title='officeEditor.lineSpacing'\n                        img='icon-office-editor-line-spacing'\n                        isActive={isOpen}\n                        onClick={() => setShowMoreTools(false)}\n                      />\n                    )}\n                  />\n                  <div className=\"divider\" />\n                  <ActionButton\n                    title='officeEditor.pageBreak'\n                    img='icon-office-editor-page-break'\n                    dataElement={DataElement.OFFICE_EDITOR_PAGE_BREAK}\n\n                    disabled={isCursorInTable}\n                    onClick={() => {\n                      core.getOfficeEditor().insertPageBreak();\n                    }}\n                  />\n                  <Dropdown\n                    id='office-editor-insert-table'\n                    dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER_INSERT_TABLE}\n                    width={136}\n                    className=\"insert-table-dropdown\"\n                    displayButton={(isOpen) => (\n                      <>\n                        <ActionButton\n                          title='officeEditor.table'\n                          img='ic-table'\n                          isActive={isOpen}\n                        />\n                        <Icon className=\"arrow\" glyph={`icon-chevron-${isOpen ? 'up' : 'down'}`} />\n                      </>\n                    )}\n                  >\n                    <OfficeEditorCreateTablePopup />\n                  </Dropdown>\n                  <>\n                    <ActionButton\n                      className=\"tool-group-button\"\n                      dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE}\n                      title='officeEditor.insertImage'\n                      img='icon-tool-image-line'\n                      onClick={() => {\n                        openOfficeEditorFilePicker();\n                      }}\n                    />\n                    <OfficeEditorImageFilePickerHandler />\n                  </>\n                  {(visibleGroupCount === 6) && (\n                    <>\n                      <div className=\"divider\" />\n                      <ListOptions listType={listType} enableNonPrintingCharacters={enableNonPrintingCharacters} />\n                    </>\n                  )}\n                  {(visibleGroupCount < 6) && (\n                    <>\n                      <div className=\"divider\" />\n                      <div className=\"action-button-wrapper\">\n                        <ActionButton\n                          className=\"tool-group-button\"\n                          isActive={showMoreTools}\n                          dataElement='office-editor-more-tools'\n                          title='action.more'\n                          img='icon-tools-more-vertical'\n                          onClick={() => setShowMoreTools(!showMoreTools)}\n                        />\n                        {showMoreTools && (\n                          <div className=\"more-tools MainHeader Tools OfficeEditorTools\">\n                            <div className=\"HeaderItems\">\n                              {(visibleGroupCount < 4) && (\n                                <>\n                                  <TextStyles\n                                    activeStates={{\n                                      bold: isBold,\n                                      italic: isItalic,\n                                      underline: isUnderline\n                                    }}\n                                  />\n                                  <div className=\"divider\" />\n                                </>\n                              )}\n                              {(visibleGroupCount < 5) && (\n                                <>\n                                  <JustificationOptions justification={justification} />\n                                  <div className=\"divider\" />\n                                </>\n                              )}\n                              {(visibleGroupCount < 6) && (\n                                <ListOptions listType={listType} enableNonPrintingCharacters={enableNonPrintingCharacters}/>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  )}\n                </div>\n              )}\n            </Measure>\n          </div>\n        )}\n      </Measure>\n    </DataElementWrapper>\n  ) : null;\n};\n\nexport default OfficeEditorToolsHeader;\n","import getRootNode from 'helpers/getRootNode';\n\nexport default () => {\n  getRootNode().querySelector('#office-editor-file-picker')?.click();\n};\n"],"sourceRoot":""}